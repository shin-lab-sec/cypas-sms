server {
  listen 443 ssl;
  server_name  api.cyber-range.test;

  ssl_certificate     /etc/nginx/ssl/_wildcard.cyber-range.test.pem;
  ssl_certificate_key /etc/nginx/ssl/_wildcard.cyber-range.test-key.pem;

  proxy_set_header    Host    $host;
  proxy_set_header    X-Real-IP    $remote_addr;
  proxy_set_header    X-Forwarded-Host       $host;
  proxy_set_header    X-Forwarded-Server    $host;
  proxy_set_header    X-Forwarded-For    $proxy_add_x_forwarded_for;


  location / {
    proxy_pass http://express:5000/;
  }
}

# websoket用の設定
map $http_upgrade $connection_upgrade {
    default upgrade;
    ''      close;
}

server {
  listen 443 ssl;
  server_name  useragent.cyber-range.test;
  root         /var/www/html;

  ssl_certificate     /etc/nginx/ssl/_wildcard.cyber-range.test.pem;
  ssl_certificate_key /etc/nginx/ssl/_wildcard.cyber-range.test-key.pem;

  proxy_set_header    Host    $host;
  proxy_set_header    X-Real-IP    $remote_addr;
  proxy_set_header    X-Forwarded-Host       $host;
  proxy_set_header    X-Forwarded-Server    $host;
  proxy_set_header    X-Forwarded-For    $proxy_add_x_forwarded_for;

  location / {
    resolver 127.0.0.11;
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection $connection_upgrade;

    set $port "";
    default_type 'text/plain';
    rewrite_by_lua '
        local res = ngx.location.capture("/redis?key=" .. ngx.var.cookie_key)
        if res.status == ngx.HTTP_OK then
          ngx.var.port  = res.body
        else
          ngx.say("faild!!!")
          ngx.exit(ngx.HTTP_FORBIDDEN)
        end
    ';

    add_header Access-Control-Allow-Origin  http://localhost:3000;
    proxy_pass https://host.docker.internal:$port;
  }


  location /scenario {
    resolver 127.0.0.11;
    set $port "";
    default_type 'text/plain';

    header_filter_by_lua_block {
        local expires = ngx.cookie_time(ngx.time() + 3600 * 24)  -- 1 day
        ngx.header["Set-Cookie"] = "key=" .. ngx.var.arg_key .. ";path=/;SameSite=None;Secure;HttpOnly;Expires=" .. expires
    }
    rewrite ^(.*)$ / redirect;
  }


  location /redis {
    internal;
    set            $redis_key $arg_key;
    redis_pass     redis:6379;
    default_type   text/html;
  }
}

